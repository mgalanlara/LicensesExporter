stages:
  - build
  - deploy

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
    #- docker:18.09.7-dind
  before_script:
    - docker version
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
  variables:
    #DOCKER_HOST: tcp://150.214.110.47:2376/
docker-deploy:
  image: alpine:latest
  stage: deploy
  tags:
    - deployment
  variables:
    # should be set up at Gitlab CI env vars
    SERVER_USER: $CI_DEPLOY_USER
    SERVER_USER_HOME: $CI_DEPLOY_HOME
    PROD_SERVERS: $CI_DEPLOY_SERVERS
  script:
      - echo "Desplegando en servidores de produccion:$PROD_SERVERS[@]"
      - chmod og= $ID_RSA
      - apk update && apk add openssh-client
      - |
        for SERVER in $PROD_SERVERS; do
             echo "Desplegando en $SERVER"
             ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
             scp -i $ID_RSA -o StrictHostKeyChecking=no docker-compose.yml $SERVER_USER@$SERVER:$SERVER_USER_HOME
             ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER "docker-compose pull"
             ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER "cd $SERVER_USER_HOME && docker-compose -f docker-compose.yml pull && HOME=$SERVER_USER_HOME docker-compose -f docker-compose.yml up -d"
        done
  when: manual
